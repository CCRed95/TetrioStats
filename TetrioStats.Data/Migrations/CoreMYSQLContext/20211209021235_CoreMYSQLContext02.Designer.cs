// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace TetrioStats.Data.Migrations.CoreMYSQLContext
{
	[DbContext(typeof(Context.CoreContext))]
	[Migration("20211209021235_CoreMYSQLContext02")]
	partial class CoreMYSQLContext02
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "3.1.17")
					.HasAnnotation("Relational:MaxIdentifierLength", 64);

			modelBuilder.Entity("TetrioStats.Data.Domain.GameRecord", b =>
					{
						b.Property<int>("GameRecordID")
											.ValueGeneratedOnAdd()
											.HasColumnType("int");

						b.Property<int>("BTB")
											.HasColumnType("int");

						b.Property<int>("Combo")
											.HasColumnType("int");

						b.Property<int?>("CurrentComboPower")
											.HasColumnType("int");

						b.Property<TimeSpan>("FinalTime")
											.HasColumnType("time(6)");

						b.Property<int>("FinesseCombo")
											.HasColumnType("int");

						b.Property<int>("FinesseFaults")
											.HasColumnType("int");

						b.Property<int>("FinessePerfectPieces")
											.HasColumnType("int");

						b.Property<int>("GameType")
											.HasColumnType("int");

						b.Property<int>("GarbageAttack")
											.HasColumnType("int");

						b.Property<int>("GarbageTotalCleared")
											.HasColumnType("int");

						b.Property<int>("GarbageTotalReceived")
											.HasColumnType("int");

						b.Property<int>("GarbageTotalSent")
											.HasColumnType("int");

						b.Property<int>("Holds")
											.HasColumnType("int");

						b.Property<int>("Inputs")
											.HasColumnType("int");

						b.Property<bool>("IsMultiplayer")
											.HasColumnType("tinyint(1)");

						b.Property<int>("Kills")
											.HasColumnType("int");

						b.Property<int>("Level")
											.HasColumnType("int");

						b.Property<int>("LevelLines")
											.HasColumnType("int");

						b.Property<int>("LevelLinesNeeded")
											.HasColumnType("int");

						b.Property<int>("LineClearsAllClears")
											.HasColumnType("int");

						b.Property<int>("LineClearsDoubles")
											.HasColumnType("int");

						b.Property<int>("LineClearsMiniTSpinDoubles")
											.HasColumnType("int");

						b.Property<int>("LineClearsMiniTSpinSingles")
											.HasColumnType("int");

						b.Property<int>("LineClearsMiniTSpins")
											.HasColumnType("int");

						b.Property<int>("LineClearsQuads")
											.HasColumnType("int");

						b.Property<int>("LineClearsRealTSpins")
											.HasColumnType("int");

						b.Property<int>("LineClearsSingles")
											.HasColumnType("int");

						b.Property<int>("LineClearsTSpinDoubles")
											.HasColumnType("int");

						b.Property<int>("LineClearsTSpinQuads")
											.HasColumnType("int");

						b.Property<int>("LineClearsTSpinSingles")
											.HasColumnType("int");

						b.Property<int>("LineClearsTSpinTriples")
											.HasColumnType("int");

						b.Property<int>("LineClearsTriples")
											.HasColumnType("int");

						b.Property<int>("LinesCleared")
											.HasColumnType("int");

						b.Property<string>("ReplayID")
											.IsRequired()
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<int>("Score")
											.HasColumnType("int");

						b.Property<string>("StreamKey")
											.IsRequired()
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<int>("TSpins")
											.HasColumnType("int");

						b.Property<string>("TetrioGameRecordID")
											.IsRequired()
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<DateTime>("TimeStamp")
											.HasColumnType("datetime(6)");

						b.Property<int>("TopBTB")
											.HasColumnType("int");

						b.Property<int>("TopCombo")
											.HasColumnType("int");

						b.Property<int>("TotalPiecesPlaced")
											.HasColumnType("int");

						b.Property<int>("UserID")
											.HasColumnType("int");

						b.Property<string>("Username")
											.IsRequired()
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<int>("ZenLevel")
											.HasColumnType("int");

						b.Property<int>("ZenProgress")
											.HasColumnType("int");

						b.HasKey("GameRecordID");

						b.HasIndex("UserID");

						b.ToTable("GameRecords");
					});

			modelBuilder.Entity("TetrioStats.Data.Domain.TLStatsEntry", b =>
					{
						b.Property<int>("TLStatsEntryID")
											.ValueGeneratedOnAdd()
											.HasColumnType("int");

						b.Property<double?>("APM")
											.HasColumnType("double");

						b.Property<string>("Country")
											.IsRequired()
											.HasColumnType("varchar(2) CHARACTER SET utf8mb4")
											.HasMaxLength(2);

						b.Property<DateTime>("DateTimeUtc")
											.HasColumnType("datetime(6)");

						b.Property<int?>("GP")
											.HasColumnType("int");

						b.Property<int?>("GW")
											.HasColumnType("int");

						b.Property<double?>("Glicko")
											.HasColumnType("double");

						b.Property<double?>("PPS")
											.HasColumnType("double");

						b.Property<double?>("RD")
											.HasColumnType("double");

						b.Property<double?>("TR")
											.HasColumnType("double");

						b.Property<string>("UserID")
											.IsRequired()
											.HasColumnType("varchar(24) CHARACTER SET utf8mb4")
											.HasMaxLength(24);

						b.Property<string>("UserRank")
											.IsRequired()
											.HasColumnType("varchar(2) CHARACTER SET utf8mb4")
											.HasMaxLength(2);

						b.Property<string>("Username")
											.IsRequired()
											.HasColumnType("varchar(16) CHARACTER SET utf8mb4")
											.HasMaxLength(16);

						b.Property<double?>("VS")
											.HasColumnType("double");

						b.Property<double?>("XP")
											.HasColumnType("double");

						b.HasKey("TLStatsEntryID")
											.HasAnnotation("SqlServer:Clustered", false);

						b.HasIndex("UserID")
											.HasAnnotation("SqlServer:Clustered", true);

						b.ToTable("TLStatsEntries");
					});

			modelBuilder.Entity("TetrioStats.Data.Domain.User", b =>
					{
						b.Property<int>("UserID")
											.ValueGeneratedOnAdd()
											.HasColumnType("int");

						b.Property<string>("TetrioUserID")
											.IsRequired()
											.HasColumnType("char(24) CHARACTER SET utf8mb4")
											.IsFixedLength(true)
											.HasMaxLength(24);

						b.Property<string>("Username")
											.IsRequired()
											.HasColumnType("varchar(16) CHARACTER SET utf8mb4")
											.HasMaxLength(16);

						b.HasKey("UserID");

						b.HasIndex("TetrioUserID")
											.IsUnique();

						b.HasIndex("Username")
											.IsUnique();

						b.ToTable("Users");
					});

			modelBuilder.Entity("TetrioStats.Data.Domain.UserStatisticsEntry", b =>
					{
						b.Property<int>("UserStatisticsEntryID")
											.ValueGeneratedOnAdd()
											.HasColumnType("int");

						b.Property<double>("AverageRollingAPM")
											.HasColumnName("APM")
											.HasColumnType("double");

						b.Property<double>("AverageRollingPPS")
											.HasColumnName("PPS")
											.HasColumnType("double");

						b.Property<double>("AverageRollingVsScore")
											.HasColumnName("VS")
											.HasColumnType("double");

						b.Property<int>("GamesPlayed")
											.HasColumnType("int");

						b.Property<int>("GamesWon")
											.HasColumnType("int");

						b.Property<double>("GlickoRating")
											.HasColumnName("Glicko")
											.HasColumnType("double");

						b.Property<double>("GlickoRatingDeviation")
											.HasColumnName("GlickoRD")
											.HasColumnType("double");

						b.Property<int>("GlobalLeaderBoardsStanding")
											.HasColumnName("GlobalStanding")
											.HasColumnType("int");

						b.Property<int>("LocalLeaderBoardsStanding")
											.HasColumnName("LocalStanding")
											.HasColumnType("int");

						b.Property<double>("Percentile")
											.HasColumnType("double");

						b.Property<string>("PercentileRank")
											.IsRequired()
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<int>("TetraLeagueGamesPlayed")
											.HasColumnName("TetraGamesPlayed")
											.HasColumnType("int");

						b.Property<int>("TetraLeagueGamesWon")
											.HasColumnName("TetraGamesWon")
											.HasColumnType("int");

						b.Property<double>("TetraLeagueRating")
											.HasColumnName("TR")
											.HasColumnType("double");

						b.Property<DateTime>("TimeStamp")
											.HasColumnType("datetime(6)");

						b.Property<TimeSpan>("TotalGamePlayDuration")
											.HasColumnName("GamePlayTime")
											.HasColumnType("time(6)");

						b.Property<int>("UserID")
											.HasColumnType("int");

						b.Property<string>("UserRank")
											.IsRequired()
											.HasColumnName("Rank")
											.HasColumnType("longtext CHARACTER SET utf8mb4");

						b.Property<double>("XP")
											.HasColumnType("double");

						b.HasKey("UserStatisticsEntryID");

						b.HasIndex("UserID");

						b.ToTable("UserStatisticsEntries");
					});

			modelBuilder.Entity("TetrioStats.Data.Domain.GameRecord", b =>
					{
						b.HasOne("TetrioStats.Data.Domain.User", "User")
											.WithMany()
											.HasForeignKey("UserID")
											.OnDelete(DeleteBehavior.Cascade)
											.IsRequired();
					});

			modelBuilder.Entity("TetrioStats.Data.Domain.UserStatisticsEntry", b =>
					{
						b.HasOne("TetrioStats.Data.Domain.User", "User")
											.WithMany()
											.HasForeignKey("UserID")
											.OnDelete(DeleteBehavior.Cascade)
											.IsRequired();
					});
#pragma warning restore 612, 618
		}
	}
}
